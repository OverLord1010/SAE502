<?php
session_start();
if ($_SESSION['role'] != 'dev') {
    header("Location: login.php");
    exit();
}

include 'ticket.php';
include 'creer_user.php';

ini_set('display_errors', 'On');
error_reporting(E_ALL);

// Enregistrement du ticket dans la base de données
if (isset($_POST['submit'])) {
    $numeroTicket = genererNumeroTicket();
    $texteTicket = $_POST['incident'];
    $rapporteur = $_SESSION['username']; // récupère le nom de l'utilisateur à partir de la session
    $urgence = $_POST['urgence']; // récupère le niveau d'urgence du ticket à partir des données du formulaire
    $nom_client =$_POST['nom_client'];
    $nom_entreprise =$_POST['nom_entreprise'];
    $titre_ticket =$_POST['titre_ticket'];
    $role=$_SESSION['role'];

    $sql = "INSERT INTO tickets (numero, texte, rapporteur, role, urgence , nom_client , nom_entreprise, titre_ticket) VALUES (?, ?, ?, ? ,? ,? ,?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ssssssss", $numeroTicket, $texteTicket, $rapporteur, $role, $urgence, $nom_client, $nom_entreprise, $titre_ticket);

    if ($stmt->execute()) {
        echo "<p>Le ticket a été enregistré avec succès. Numéro de ticket : " . $numeroTicket . "</p>";
    } else {
        echo "<p>Une erreur est survenue lors de l'enregistrement du ticket.</p>";
    }
}

if (isset($_POST['creer_user'])) {
    $username = $_POST['username'];
    $passeword = $_POST['password'];
    $role = $_POST['role'];

    creerUtilisateur($conn, $username, $passeword, $role);
}

// Suppression d'un utilisateur
if (isset($_POST['delete_user'])) {
    $username = $_POST['nom_utilisateur_delete'];

    supprimerUtilisateur($conn, username: $username);
}

// Assigner un ticket à l'utilisateur
if (isset($_POST['assign_ticket'])) {
    $ticket_id = $_POST['ticket_id'];
    $username = $_SESSION['username'];

    $sql = "UPDATE tickets SET assigne_a = ? WHERE numero = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("ss", $username, $ticket_id);

    if ($stmt->execute()) {
        echo json_encode(['status' => 'success', 'message' => 'Le ticket a été assigné avec succès.']);
    } else {
        echo json_encode(['status' => 'error', 'message' => 'Une erreur est survenue lors de l\'assignation du ticket.']);
    }
    exit();
}

$sql = "SELECT date_creation, numero, texte, rapporteur, role, urgence, nom_client, nom_entreprise, titre_ticket, assigne_a FROM tickets";
$result = $conn->query($sql);

// Fermeture de la connexion à la base de données
$conn->close();

?>
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Page Dev</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        #tickets-table {
            display: none;
        }
    </style>
</head>
<body>
    <h1>Bienvenue <?php echo htmlspecialchars($_SESSION['username']); ?>!</h1>
    <p>Ceci est la page réservée aux développeurs.</p>
    <a href="logout.php">Se déconnecter</a>

    <h2>Créer un nouveau ticket</h2>
    <form method="post">
        <h4 for="incident"> titre du ticket : <textarea id="titre_ticket" name="titre_ticket"rows="1" cols="30"></textarea></h4>
        <label >Description de l'incident : </label><br>
        <textarea id="incident" name="incident" rows="30" cols="100"></textarea>
        <h3>nom client : <textarea id="nom_client" name="nom_client"rows="1" cols="30"></textarea></h3><h3> nom entreprise : <textarea id="nom_entreprise" name="nom_entreprise" rows="1" cols="30"></textarea></h3>
        <label for="urgence">Niveau d'urgence du ticket :</label><br>
        <select id="urgence" name="urgence">
            <option value="faible">Faible</option>
            <option value="moyen">Moyen</option>
            <option value="eleve">Élevé</option>
        </select><br>
        <input type="submit" name="submit" value="Créer un ticket">
    </form>

    <h2>Créer un nouvel utilisateur</h2>
    <form method="post">
        <label for="username">Nom d'utilisateur :</label><br>
        <input type="text" id="username" name="username" required><br>
        <label for="password">Mot de passe :</label><br>
        <input type="password" id="password" name="password" required><br>
        <label for="role">Rôle :</label><br>
        <select id="role" name="role">
            <option value="dev">Développeur</option>
            <option value="rapporteur">Rapporteur</option>
            <option value="admin">Administrateur</option>
        </select><br>
        <input type="submit" name="creer_user" value="Créer un utilisateur">
    </form>

    <h2>Supprimer un utilisateur</h2>
    <form method="post">
        <label for="nom_utilisateur_delete">Nom d'utilisateur :</label><br>
        <input type="text" id="nom_utilisateur_delete" name="nom_utilisateur_delete" required><br>
        <input type="submit" name="delete_user" value="Supprimer l'utilisateur">
    </form>

    <button onclick="toggleTickets()">Afficher les tickets</button>

    <h1>Afficher les tickets</h1>
    <table id="tickets-table">
        <tr>
            <th>date création ticket</th>
            <th>Numéro</th>
            <th>Titre</th>
            <th>Description</th>
            <th>Rapporteur</th>
            <th>Rôle</th>
            <th>Urgence</th>
            <th>Nom Client</th>
            <th>Nom Entreprise</th>
            <th>Assigné à</th>
            <th>Action</th>
        </tr>
        <?php
        if ($result->num_rows > 0) {
            while($row = $result->fetch_assoc()) {
                echo "<tr>";
                echo "<td>" . htmlspecialchars($row['date_creation']) . "</td>";
                echo "<td>" . htmlspecialchars($row['numero']) . "</td>";
                echo "<td>" . htmlspecialchars($row['titre_ticket']) . "</td>";
                echo "<td>" . htmlspecialchars($row['texte']) . "</td>";
                echo "<td>" . htmlspecialchars($row['rapporteur']) . "</td>";
                echo "<td>" . htmlspecialchars($row['role']) . "</td>";
                echo "<td>" . htmlspecialchars($row['urgence']) . "</td>";
                echo "<td>" . htmlspecialchars($row['nom_client']) . "</td>";
                echo "<td>" . htmlspecialchars($row['nom_entreprise']) . "</td>";
                echo "<td>" . htmlspecialchars($row['assigne_a']) . "</td>";
                echo "<td><button onclick='assignTicket(\"" . htmlspecialchars($row['numero']) . "\")'>S'assigner</button></td>";
                echo "</tr>";
            }
        } else {
            echo "<tr><td colspan='10'>Aucun ticket trouvé</td></tr>";
        }
        ?>
    </table>

    <script>
        function toggleTickets() {
            var table = document.getElementById('tickets-table');
            if (table.style.display === 'none' || table.style.display === '') {
                table.style.display = 'table';
            } else {
                table.style.display = 'none';
            }
        }

        function assignTicket(ticketId) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.status === 'success') {
                        alert(response.message);
                        location.reload(); // Recharge la page pour mettre à jour l'affichage des tickets
                    } else {
                        alert(response.message);
                    }
                }
            };
            xhr.send("assign_ticket=1&ticket_id=" + ticketId);
        }
    </script>
</body>
</html>

Explications :

    Ajout du bouton "S'assigner" :
        Un bouton "S'assigner" est ajouté à chaque ligne du tableau des tickets. Ce bouton appelle la fonction JavaScript assignTicket avec l'ID du ticket comme argument.

    Fonction JavaScript assignTicket :
        Cette fonction envoie une requête AJAX au serveur pour assigner le ticket à l'utilisateur.
        La requête AJAX est envoyée à la même page (""), et le serveur traite cette requête en mettant à jour la base de données.

    Traitement de la requête AJAX côté serveur :
        Le serveur vérifie si la requête contient le paramètre assign_ticket.
        Si c'est le cas, il met à jour la base de données pour assigner le ticket à l'utilisateur actuellement connecté.
        Une réponse JSON est renvoyée au client pour indiquer le succès ou l'échec de l'opération.

    Rechargement de la page :
        Après avoir assigné le ticket, la page est rechargée pour mettre à jour l'affichage des tickets.

Avec ces modifications, les utilisateurs peuvent s'assigner des tickets en cliquant sur le bouton "S'assigner" correspondant à chaque ticket.